--scripting creating table
--CREATE TABLE Department(DepartmentId int PRIMARY KEY ,Name VARCHAR(20));

--CREATE TABLE Role(EmployeeId INT PRIMARY KEY,Role VARCHAR(20),AffectedFrom DATETIME);

--CREATE TABLE Employee (
--EmployeeId INT,
--FirstName VARCHAR(20),
--LastName VARCHAR(20),
--Salary Numeric(10,2),
--JOININGDATE DATETIME,
--DepartmentId INT,
--CONSTRAINT FK_Employee_Role FOREIGN KEY (EmployeeId) REFERENCES Role(EmployeeId),
--CONSTRAINT FK_Employee_Department FOREIGN KEY (DepartmentId) REFERENCES Department (DepartmentId)
--);


--INSERTING DATA IN TABLES

--INSERT INTO Department VALUES(1 ,'Admin'),
--(2,'HR'),
--(3,'Account'),
--(4,'Finance');

--SELECT * FROM Department;

--INSERT INTO Role VALUES (1,'Manager',GETDATE()),
--(2,'Executive',GETDATE()),
--(8,'Executive',GETDATE()),
--(5,'Manager',GETDATE()),
--(4,'Asst.Manager',GETDATE()),
--(7,'Executive',GETDATE()),
--(6,'Lead',GETDATE()),
--(3,'Lead',GETDATE());

--SELECT * FROM Role;

--CREATE TABLE Employee (
--EmployeeId INT,
--FirstName VARCHAR(20),
--LastName VARCHAR(20),
--Salary Numeric(10,2),
--JOININGDATE DATETIME,
--DepartmentId INT,
--CONSTRAINT FK_Employee_Role FOREIGN KEY (EmployeeId) REFERENCES Role(EmployeeId),
--CONSTRAINT FK_Employee_Department FOREIGN KEY (DepartmentId) REFERENCES Department (DepartmentId)
--);


--INSERT INTO Employee VALUES
--(1, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 2),
--(2, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 1),
--(3, 'Vishal', 'Singal', 300000, '2014-02-20 09:00:00', 2),
--(4, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 1),
--(5, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 1),
--(6, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 3),
--(7, 'Satish', 'Kumar', 750000, '2014-01-20 09:00:00', 3),
--(8, 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 1);

--SELECT * FROM Employee;


--1
--SELECT UPPER(FirstName) AS FirstName FROM Employee;
--2
--Get the unique name of departments from the Employee table.
--	SELECT DISTINCT 
--    (SELECT d.Name FROM Department d WHERE d.DepartmentId = e.DepartmentId) AS Department
--FROM 
--    Employee e;

--3
--Print the first three characters of FirstName.
--SELECT SUBSTRING (firstNAME, 1,3) AS first_three FROM Employee ;
--4
--Pring the full name of the employee by combining first and last name.
--SELECT CONCAT (firstName,' ',lastName) as full_name from employee;
--5
--Print all employee data in ascending order by employee name.
--SELECT * FROM Employee order by FirstName ASC;
--6
--Print all the employees in ascending order and then in department order.
--SELECT 
--    e.EmployeeId, 
--    e.FirstName, 
--    e.LastName, 
--    e.Salary, 
--    e.JOININGDATE,
--    (SELECT d.Name FROM Department d WHERE d.DepartmentId = e.DepartmentId) AS Department
--FROM 
--    Employee e
--ORDER BY 
--    e.FirstName ASC ,Department ASC;
--7
--Print the employees whose first names are 'Vipul' and 'Satish'.
--SELECT * from Employee WHERE FirstName ='Vipul' or FirstName= 'Satish';
--SELECT * FROM Employee WHERE FirstName IN ('Vipul','Satish');
--8
--Print the employee details excluding 'Vipul' and 'Satish'.
--SELECT * FROM Employee WHERE FirstName NOT IN ('Vipul','Satish');
--9
--Print the employee whose department is "Admin".
--SELECT 
--    e.EmployeeId, 
--    e.FirstName, 
--    e.LastName, 
--    e.Salary, 
--    e.JOININGDATE
--FROM 
--    Employee e
--	WHERE
--	(SELECT d.Name FROM Department d WHERE d.DepartmentId =e.DepartmentId)='Admin';
--10
--Get the list of department not assigned to any employee.
--SELECT 
--d.Name,
--d.DepartmentId
--FROM
--Department d
--WHERE
--d.DepartmentId NOT IN(
--SELECT
--e.DepartmentId
--FROM
--Employee e
--);
--11
--Print the employee the first name containing "a".
--SELECT * FROM Employee WHERE FirstName like '%a%';

--12
--Print the employee details whose salary is between 100000 to 500000.
--SELECT * FROM Employee WHERE Salary Between 100000 AND 500000

--13
--Print the employee joined on Feb 2014.
--SELECT * FROM Employee WHERE JOININGDATE ='2014-02-20 09:00:00';

--14
--Get the count of employees as per their department.
--SELECT 
--    (SELECT Name FROM Department WHERE DepartmentId = e.DepartmentId) AS Department,
--   COUNT(e.EmployeeId) as EmployeeCount
--FROM 
--    Employee e
--GROUP BY 
--    e.DepartmentId;
--SELECT 
--    d.Name AS Department,
--    d.DepartmentId,
--    (SELECT COUNT(e.EmployeeId) FROM Employee e WHERE e.DepartmentId = d.DepartmentId) AS EmployeeCount
--FROM
--    Department d;


--15
--Get the list of employees whose role is "Manager".
--SELECT 
--    e.EmployeeId, 
--    e.FirstName, 
--    e.LastName, 
--    e.Salary, 
--    e.JOININGDATE
--FROM 
--    Employee e
--	WHERE
--   (SELECT r.Role From Role r Where r.EmployeeId = e.EmployeeId)='Manager';

--16
--Write SQL query to print 2nd highest salary.
--SELECT MAX(Salary) AS SecondHighestSalary
--FROM Employee
--WHERE Salary < (SELECT MAX(Salary) FROM Employee);

--17
--Write SQL query to print department-wise salary.
--SELECT 
--    d.Name AS Department,
--    d.DepartmentId,
--    (SELECT SUM(e.Salary) FROM Employee e WHERE e.DepartmentId = d.DepartmentId) AS TotalSalary
--FROM
--    Department d;


--SELECT * from Employee;
--SELECT * from Department;
--SELECT * from Role;