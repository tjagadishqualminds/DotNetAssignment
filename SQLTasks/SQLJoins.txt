

--CREATE DATABASE EmployeeData;
--use EmployeeData;
--creating tables
--CREATE TABLE Employee (
--EmployeeId INT IDENTITY(1,1),
--FirstName VARCHAR(20),
--LastName VARCHAR(20),
--Salary Numeric(10,2),
--JOININGDATE DATETIME,
--DepartmentId INT,
--CONSTRAINT PK_Employee_EmployeeId PRIMARY KEY(EmployeeId),
--CONSTRAINT FK_Employee_Department FOREIGN KEY (DepartmentId) REFERENCES Department (DepartmentId)
--);

--INSERT
--INSERT INTO Employee (FirstName, LastName, Salary, JoiningDate, DepartmentId) VALUES
--('Monika', 'Arora', 100000.00, '2014-02-20 09:00:00', 2),
--('Niharika', 'Verma', 80000.00, '2014-06-11 09:00:00', 1),
--('Vishal', 'Singal', 300000.00, '2014-02-20 09:00:00', 2),
--('Amitabh', 'Singh', 500000.00, '2014-02-20 09:00:00', 1),
--('Vivek', 'Bhati', 500000.00, '2014-06-11 09:00:00', 1),
--('Vipul', 'Diwan', 200000.00, '2014-06-11 09:00:00', 3),
--('Satish', 'Kumar', 750000.00, '2014-01-20 09:00:00', 3),
--('Geetika', 'Chauhan', 90000.00, '2014-04-11 09:00:00', 1);

--SELECT * FROM  Employee;

﻿--scripting Department table
--CREATE TABLE Department
--(DepartmentId int IDENTITY(1,1),
--[Name] VARCHAR(20)
--CONSTRAINT PK_Department_DepartmentId PRIMARY KEY(DepartmentId)
--);

--INSERT INTO Department([Name]) VALUES('Admin'),
--('HR'),
--('Account'),
--('Finance');

--SELECT * FROM Department;

--CREATE TABLE [Role]
--(
--    EmployeeId INT,
--    RoleId INT IDENTITY(1,1),
--    [Role] VARCHAR(20),
--    AffectedFrom DATETIME,
--    CONSTRAINT PK_Role_Role PRIMARY KEY(RoleId),
--    CONSTRAINT FK_Role_Employee FOREIGN KEY(EmployeeId) REFERENCES Employee(EmployeeId)
--);


--INSERT INTO [Role](EmployeeId,[Role],AffectedFrom) VALUES
--(1,'Manager',GETDATE()),
--(2,'Executive',GETDATE()),
--(8,'Executive',GETDATE()),
--(5,'Manager',GETDATE()),
--(4,'Asst.Manager',GETDATE()),
--(7,'Executive',GETDATE()),
--(6,'Lead',GETDATE()),
--(3,'Lead',GETDATE());

--SELECT * FROM [Role];


--1
--SELECT UPPER(FirstName) AS FirstName FROM Employee;
--2
--Get the unique name of departments from the Employee table.

--SELECT DISTINCT d.Name AS Department
--FROM Employee e
--JOIN Department d ON e.DepartmentId = d.DepartmentId;

--3
--Print the first three characters of FirstName.
--SELECT SUBSTRING (firstNAME, 1,3) AS first_three FROM Employee ;
--4
--Pring the full name of the employee by combining first and last name.
--SELECT CONCAT (firstName,' ',lastName) as full_name from employee;
--5
--Print all employee data in ascending order by employee name.
--SELECT * FROM Employee order by FirstName ASC;
--6
--Print all the employees in ascending order and then in department order.

  --SELECT  * FROM  Employee e
  --JOIN Department d ON e.DepartmentId = d.DepartmentId
  --ORDER BY 
  --e.FirstName ASC,d.Name Asc
;


--7
--Print the employees whose first names are 'Vipul' and 'Satish'.
--SELECT * from Employee WHERE FirstName ='Vipul' or FirstName= 'Satish';
--SELECT * FROM Employee WHERE FirstName IN ('Vipul','Satish');
--8
--Print the employee details excluding 'Vipul' and 'Satish'.
--SELECT * FROM Employee WHERE FirstName NOT IN ('Vipul','Satish');
--9
--Print the employee whose department is "Admin".
--SELECT  *FROM Employee e
--JOIN  Department d ON e.DepartmentId = d.DepartmentId
--WHERE 
--    d.Name = 'Admin';
--10
--Get the list of department not assigned to any employee.

--SELECT *
--FROM
--    Department d
--LEFT JOIN
--    Employee e ON d.DepartmentId = e.DepartmentId
--WHERE
--    e.DepartmentId IS NULL;

 

--11
--Print the employee the first name containing "a".
--SELECT * FROM Employee WHERE FirstName like '%a%';

--12
--Print the employee details whose salary is between 100000 to 500000.
--SELECT * FROM Employee WHERE Salary Between 100000 AND 500000

--13
--Print the employee joined on Feb 2014.
--SELECT * FROM Employee WHERE JOININGDATE ='2014-02-20 09:00:00';

--14
--Get the count of employees as per their department.
--SELECT 
--    d.Name AS Department,
--    COUNT(e.DepartmentId) AS EmployeeCount
--FROM 
--    Department d
--LEFT JOIN 
--    Employee e ON d.DepartmentId = e.DepartmentId
--GROUP BY 
--    d.Name;


--15
--Get the list of employees whose role is "Manager". 
  --SELECT * FROM Employee e
  --JOIN  
  --Role r ON e.EmployeeId = r.EmployeeId
  --Where r.Role='Manager'

--16
--Write SQL query to print 2nd highest salary.
--SELECT MAX(Salary) AS SecondHighestSalary
--FROM Employee
--WHERE Salary < (SELECT MAX(Salary) FROM Employee);

--17
--Write SQL query to print department-wise salary.
--SELECT  d.Name AS DepartmentName,
--  SUM(e.Salary) AS TotalSalary
--FROM 
--  Department d
-- LEFT JOIN Employee e ON d.DepartmentId = e.DepartmentId
--GROUP BY 
--  d.Name;

--SELECT * from Employee;
--SELECT * from Department;
--SELECT * from Role;